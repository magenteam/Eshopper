{
    "openapi": "3.0.1",
    "info": {
        "title": "ywebservices API",
        "description": "ywebservices Documentation",
        "license": {
            "name": "Use of this file is subject to the terms of your agreement with SAP SE or its affiliates respecting the use of the SAP product for which this file relates.",
            "url": ""
        },
        "version": "1.0.0"
    },
    "externalDocs": {
        "description": "SAP Commerce Cloud",
        "url": "https://www.sap.com"
    },
    "servers": [
        {
            "url": "https://localhost:9002/ywebservices",
            "description": "Generated server url"
        }
    ],
    "security": [
        {
            "oauth2_Password": [
                "basic"
            ]
        },
        {
            "oauth2_client_credentials": [
                "extended"
            ]
        }
    ],
    "tags": [
        {
            "name": "Sample"
        }
    ],
    "paths": {
        "/sample/dto": {
            "post": {
                "tags": [
                    "Sample"
                ],
                "summary": "Method with body parameter",
                "description": "Sample method handling POST body parameter",
                "operationId": "createSample",
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/sample"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sample"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/sample"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sample"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth": [
                            "oauth2_client_credentials",
                            "oauth2_password"
                        ]
                    },
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/dto/{pathVariable}": {
            "get": {
                "tags": [
                    "Sample"
                ],
                "summary": "Method with path parameter returns sample DTO",
                "description": "Sample method returning Cache-Control header and using Path Variable",
                "operationId": "getSample",
                "parameters": [
                    {
                        "name": "pathVariable",
                        "in": "path",
                        "description": "Sample path variable parameter. It should be returned in response DTO",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/sample"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sample"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth": [
                            "oauth2_client_credentials",
                            "oauth2_password"
                        ]
                    },
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/map": {
            "get": {
                "tags": [
                    "Sample"
                ],
                "summary": "Get object with map inside",
                "description": "Sample method returning object with map.",
                "operationId": "getTestMap",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/testMap"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/testMap"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/plain/double": {
            "post": {
                "tags": [
                    "Sample"
                ],
                "summary": "Process Double object",
                "description": "Sample method returning string object",
                "operationId": "doProcessDouble",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "number",
                                "description": "Request param which will be used to calculate response value",
                                "format": "double"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "number",
                                    "format": "double"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/plain/list": {
            "get": {
                "tags": [
                    "Sample"
                ],
                "summary": "Get list object",
                "description": "Sample method returning list object.",
                "operationId": "getList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/plain/long": {
            "post": {
                "tags": [
                    "Sample"
                ],
                "summary": "Process Long object",
                "description": "Sample method returning Long object",
                "operationId": "doProcessLong",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "description": "Request param which will be used to calculate response value",
                                "format": "int64"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/plain/map": {
            "get": {
                "tags": [
                    "Sample"
                ],
                "summary": "Get map object",
                "description": "Sample method returning map object.",
                "operationId": "getMap",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/plain/string": {
            "post": {
                "tags": [
                    "Sample"
                ],
                "summary": "Process String object",
                "description": "Sample method returning string object",
                "operationId": "doProcessString",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string",
                                "description": "Request parameter which will be changed to response string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/testBean": {
            "get": {
                "tags": [
                    "Sample"
                ],
                "summary": "Get bean object",
                "description": "Sample method returning bean object.",
                "operationId": "getTestBeanText",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/sample"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sample"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/users": {
            "get": {
                "tags": [
                    "Sample"
                ],
                "summary": "Get users",
                "description": "Sample method returning user list.",
                "operationId": "getUsersList",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Response configuration. This is the list of fields that should be returned in the response body. Examples: users(firstName,addresses(street)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/usersList"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/usersList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth": [
                            "oauth2_client_credentials",
                            "oauth2_password"
                        ]
                    },
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/users/{id}": {
            "get": {
                "tags": [
                    "Sample"
                ],
                "summary": "Get user information",
                "description": "Sample method returning user information. Operation permitted for ROLE_CLIENT",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Response configuration. This is the list of fields that should be returned in the response body. Examples: firstName,addresses(street)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth": [
                            "oauth2_client_credentials"
                        ]
                    },
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/users/{userId}": {
            "patch": {
                "tags": [
                    "Sample"
                ],
                "summary": "Update username and info",
                "description": "Sample method updating username and info",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/user"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/user"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth": [
                            "oauth2_client_credentials",
                            "oauth2_password"
                        ]
                    },
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        },
        "/sample/usersPaged": {
            "get": {
                "tags": [
                    "Sample"
                ],
                "summary": "Get users",
                "description": "Sample method returning user page.",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "currentPage",
                        "in": "query",
                        "description": "Current page number",
                        "schema": {
                            "type": "int"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "Request total count",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "schema": {
                            "type": "int"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/usersPage"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/usersPage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth": [
                            "oauth2_client_credentials",
                            "oauth2_password"
                        ]
                    },
                    {
                        "oauth2_Password": [
                            "basic"
                        ]
                    },
                    {
                        "oauth2_client_credentials": [
                            "extended"
                        ]
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "address": {
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "town": {
                        "type": "string"
                    },
                    "streetNumber": {
                        "type": "string"
                    }
                },
                "description": "Address DTO"
            },
            "pagination": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "Number of elements on this page",
                        "format": "int32"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total number of elements",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total number of pages",
                        "format": "int32"
                    },
                    "hasNext": {
                        "type": "boolean",
                        "description": "Indicates if there is next page"
                    },
                    "hasPrevious": {
                        "type": "boolean",
                        "description": "Indicates if there is previous page"
                    }
                },
                "description": "Pagination info"
            },
            "sample": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "sample value"
                    }
                },
                "description": "Sample request body parameter (DTO in xml or json format). It should be returned as response DTO"
            },
            "sort": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "asc": {
                        "type": "boolean"
                    }
                },
                "description": "Sort option"
            },
            "testMap": {
                "type": "object",
                "properties": {
                    "stringMap": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "integerMap": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "description": "Example of DTO with map"
            },
            "user": {
                "required": [
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/address"
                        }
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First Name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last Name"
                    },
                    "info": {
                        "type": "string"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/address"
                    }
                },
                "description": "User data as DTO in xml or json format"
            },
            "usersList": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/user"
                        }
                    }
                },
                "description": "User list"
            },
            "usersPage": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "description": "Result list",
                        "items": {
                            "$ref": "#/components/schemas/user"
                        }
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/sort"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/pagination"
                    }
                }
            }
        },
        "securitySchemes": {
            "oauth2_Password": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "tokenUrl": "/authorizationserver/oauth/token",
                        "scopes": {
                            "basic": ""
                        }
                    }
                }
            },
            "oauth2_client_credentials": {
                "type": "oauth2",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "/authorizationserver/oauth/token",
                        "scopes": {
                            "extended": ""
                        }
                    }
                }
            }
        }
    },
    "x-sap-api-type": "REST",
    "x-sap-shortText": "ywebservices",
    "x-sap-stateInfo": {
        "state": "Active"
    },
    "x-servers": [
        {
            "templates": {
                "url": {
                    "description": "SAP Commerce Cloud server URL where the application is deployed."
                }
            },
            "description": "ywebservices REST API endpoint",
            "url": "https://{url}/ywebservices"
        }
    ]
}
